services:
  frontend:
    image: ${DOCKER_USERNAME}/dream-vacation-app-frontend:${IMAGE_TAG}
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - COUNTRIES_API_BASE_URL=https://restcountries.com/v3.1
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    image: ${DOCKER_USERNAME}/dream-vacation-app-backend:${IMAGE_TAG}
    ports:
      - "3001:3001"  # For browser-based requests
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - COUNTRIES_API_BASE_URL=${COUNTRIES_API_BASE_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  db:
    image: postgres:16
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  app-network:
    driver: bridge
