name: Backend CI/CD

on:
  push:
    branches: [ Ec2-deploy ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ Ec2-deploy ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & push backend image (commit tag only)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dream-backend:${{ github.sha }}

      # Upload base compose + env files to server (idempotent)
      - name: Upload compose + env files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            docker-compose.base.yml
            backend/.env
            frontend/.env
          target: /home/${{ secrets.EC2_USER }}/app
          strip_components: 0

      - name: Bootstrap or update on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e

            # Ensure Docker & Compose
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl enable docker
              sudo usermod -aG docker $USER || true
            fi
            if ! command -v docker-compose >/dev/null 2>&1; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            cd /home/${{ secrets.EC2_USER }}/app

            # Ensure dir structure for env_file references
            mkdir -p backend frontend

            # Move env files into place (these come from your repo)
            mv -f .env backend/.env || true
            mv -f app/.env backend/.env || true
            mv -f backend/.env backend/.env || true
            mv -f frontend/.env frontend/.env || true

            # If first time, create docker-compose.yml from base
            if [ ! -f docker-compose.yml ]; then
              echo "First-time backend bootstrap..."
              cp docker-compose.base.yml docker-compose.yml
              sed -i "s|DOCKER_USERNAME_PLACEHOLDER|${{ secrets.DOCKER_USERNAME }}|g" docker-compose.yml
              sed -i "s|REPLACE_BACKEND_TAG|${GITHUB_SHA}|g" docker-compose.yml
              # Frontend not built yet? leave placeholder or set to a benign tag
              sed -i "s|REPLACE_FRONTEND_TAG|bootstrap|g" docker-compose.yml

              # Start only db + backend so frontend dependency is satisfied later
              docker-compose up -d db backend
              exit 0
            fi

            # Subsequent runs: update only backend tag in-place
            sed -i "s|${{ secrets.DOCKER_USERNAME }}/dream-backend:[^[:space:]]*|${{ secrets.DOCKER_USERNAME }}/dream-backend:${GITHUB_SHA}|g" docker-compose.yml
            docker-compose pull backend
            docker-compose up -d backend
