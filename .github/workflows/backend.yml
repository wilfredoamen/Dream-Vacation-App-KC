name: Deploy Backend

on:
  push:
    branches: [ Ec2-deploy ]
    paths:
      - "backend/**"
      - "docker-compose.yml"
      - ".github/workflows/backend.yml"

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dream-backend:${GITHUB_SHA} backend
          docker tag ${{ secrets.DOCKER_USERNAME }}/dream-backend:${GITHUB_SHA} ${{ secrets.DOCKER_USERNAME }}/dream-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/dream-backend:${GITHUB_SHA}
          docker push ${{ secrets.DOCKER_USERNAME }}/dream-backend:latest

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key_path: key.pem
          script: |
            cd ~/app
            cat > .env <<EOL
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            IMAGE_TAG=${GITHUB_SHA}
            EOL
            docker compose pull backend
            docker compose up -d backend
