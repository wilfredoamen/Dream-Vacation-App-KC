name: Backend CI/CD

on:
  push:
    branches:
      - Ec2-deploy
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches:
      - Ec2-deploy
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dream-backend:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/app
            touch .env
            # Remove only the old BACKEND_IMAGE line and replace
            sed -i "/^BACKEND_IMAGE=/d" .env
            echo "BACKEND_IMAGE=${{ secrets.DOCKER_USERNAME }}/dream-backend:${IMAGE_TAG}" >> .env

            # Ensure other env vars exist
            grep -qxF "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" .env || echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            grep -qxF "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" .env || echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            grep -qxF "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" .env || echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            grep -qxF "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" .env || echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env

            # Pull and restart only backend
            docker-compose pull backend
            docker-compose up -d backend
