name: Build and Deploy Full Stack to EC2
on:
  push:
    branches:
      - Ec2-deploy
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'docker-compose.yml'
      - '.github/workflows/deploy.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'backend/') || contains(github.event.head_commit.modified, 'docker-compose.yml')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-backend:${{ env.IMAGE_TAG }} ./backend
          docker tag ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-backend:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-backend:latest
      
      - name: Push Backend Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-backend:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-backend:latest
      
      - name: Deploy Backend to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          envs: IMAGE_TAG
          script: |
            cd /home/ubuntu/app
            echo "IMAGE_TAG=${IMAGE_TAG}" > .env.backend
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env.backend
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.backend
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.backend
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.backend
            echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env.backend
            
            docker-compose -p app up -d backend db --remove-orphans
            sleep 10
            docker-compose -p app ps

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    if: contains(github.event.head_commit.modified, 'frontend/') || contains(github.event.head_commit.modified, 'docker-compose.yml')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-frontend:${{ env.IMAGE_TAG }} ./frontend
          docker tag ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-frontend:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-frontend:latest
      
      - name: Push Frontend Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-frontend:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/dream-vacation-app-frontend:latest
      
      - name: Deploy Frontend to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          envs: IMAGE_TAG
          script: |
            cd /home/ubuntu/app
            echo "IMAGE_TAG=${IMAGE_TAG}" > .env.frontend
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env.frontend
            echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env.frontend
            
            docker-compose -p app up -d frontend --remove-orphans
            sleep 5
            docker-compose -p app ps